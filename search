//使用二分查找需要两个条件：
1.有序数组
2.数组中无重复元素，否则容易出现多个下标

常用二分查找的方法：
方法一：
package search;

/**
 * 二分查找
 *给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，
 * 写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。
 */
public class Search {
    public static void main(String[] args) {
        int[] arr = {1,2,4,6,7,9};
        search(arr,1);
        System.out.println(search(arr,23));
    }
    public static int search(int[] nums, int target){
        int left = 0;
        int right = nums.length - 1;//定义 target 在左闭右闭的区间里，[Left，right]
        while (left <= right){
            int middle = left + (right - left)/2;
            if(nums[middle] < target){
                left = middle + 1;
            }else if(nums[middle] > target){
                right = middle - 1;
            }else {
                return middle;
            }
        }
        return -1;
    }
}






















